[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Elementos de Matemática Discreta para Computação: Soluções",
    "section": "",
    "text": "Apresentação\nEste livro eletrônico — um trabalho em construção — reúne soluções dos exercícios do livro Elementos de Matemática Discreta para Computação, de autoria de Anamaria Gomide e Jorge Stolfi (Anamaria Gomide 2023), disponível em https://www.ic.unicamp.br/~stolfi/fmc-book/2022-08-24-js/livro.pdf.\nAlém das soluções teóricas, incluímos código em SETLX (Set Language Extended), uma linguagem de programação de alto nível projetada especificamente para resolver problemas envolvendo conjuntos, relações, funções e outros objetos estudados em um curso de Matemática Discreta.\nPara saber mais sobre SETLX — incluindo como instalar a liguagem nos principais sistemas operacionais — visite https://randoom.org/Software/SetlX/. Um tutorial completo de SETLX está disponível em https://download.randoom.org/setlX/tutorial.pdf.",
    "crumbs": [
      "Apresentação"
    ]
  },
  {
    "objectID": "index.html#agradecimentos",
    "href": "index.html#agradecimentos",
    "title": "Elementos de Matemática Discreta para Computação: Soluções",
    "section": "Agradecimentos",
    "text": "Agradecimentos\nMuitas das soluções foram desenvolvidas ao longo do ano de 2024 pelos alunos da disciplina de Matemática Discreta do curso de Ciência da Computação do Pólo de Rio das Ostras da Universidade Federal Fluminense.\n\n\n\n\n\n\nAnamaria Gomide, Jorge Stolfi. 2023. Elementos de Matemática Discreta para Computação. https://www.ic.unicamp.br/~stolfi/fmc-book/2022-08-24-js/livro.pdf.",
    "crumbs": [
      "Apresentação"
    ]
  },
  {
    "objectID": "02-conjuntos.html",
    "href": "02-conjuntos.html",
    "title": "2 Teoria dos Conjuntos",
    "section": "",
    "text": "2.1 Conjuntos, elementos e pertinência",
    "crumbs": [
      "2 Teoria dos Conjuntos"
    ]
  },
  {
    "objectID": "02-conjuntos.html#conjuntos-elementos-e-pertinência",
    "href": "02-conjuntos.html#conjuntos-elementos-e-pertinência",
    "title": "2 Teoria dos Conjuntos",
    "section": "",
    "text": "Exercício 2.1\nEscreva os elementos dos conjuntos abaixo:\n\n\\(\\{ x : x \\text{ é raiz do polinômio } x^4 - 5x^2 + 6 \\}\\)\n\\(\\{ x^2 + 1 : x \\text{ é raiz do polinômio } x^4 - 5x^2 + 6 \\}\\)\n\\(\\{ x \\in \\{1, 2, 3, 4\\} : x \\text{ é raiz do polinômio } x^4 - 5x^2 + 6 \\}\\)\n\n\n\n\n\n\n\nResposta (a)\n\n\n\n\n\nPrecisamos usar algum método para resolver a equação\n\\[\nx^4 - 5x^2 + 6 = 0\n\\]\nUma maneira: se fizermos \\(y = x^2\\), a equação fica\n\\[\ny^2 - 5y + 6 = 0\n\\]\nque tem raízes \\(y = 2\\) e \\(y = 3\\).\nDaí, resolvendo \\(2 = x^2\\), temos \\(x = \\pm\\sqrt2\\).\nE resolvendo \\(3 = x^2\\), temos \\(x = \\pm\\sqrt3\\).\nEscrevendo o conjunto como uma enumeração dos elementos:\n\\[\n\\left\\{ -\\sqrt3, -\\sqrt2, \\sqrt2, \\sqrt3 \\right\\}\n\\]\n\n\n\n\n\n\n\n\n\nResposta (b)\n\n\n\n\n\nPreste atenção: agora, não queremos as raízes, mas sim os valores de \\(x^2 + 1\\), onde \\(x\\) assume os valores das raízes.\nO conjunto poderia ser escrito como\n\\[\n\\left\\{ x^2 + 1 : x \\in \\{ -\\sqrt3, -\\sqrt2, \\sqrt2, \\sqrt3 \\} \\right\\}\n\\]\nCalculando os valores de \\(x^2 + 1\\), temos:\n\n\n\n\n\n\n\n\n\n\n\\(x\\)\n\\(x^2 + 1\\)\n\n\n\n\\(-\\sqrt{3}\\)\n\\(4\\)\n\n\n\\(-\\sqrt{2}\\)\n\\(3\\)\n\n\n\\(\\sqrt{2}\\)\n\\(3\\)\n\n\n\\(\\sqrt{3}\\)\n\\(4\\)\n\n\n\n\n\n\nNa tabela acima, há elementos repetidos, mas isto não pode acontecer em um conjunto. Então, a resposta é\n\\[\n\\left\\{ 3, 4 \\right\\}\n\\]\nEm SETLX\n\nA := { -sqrt(3), -sqrt(2), sqrt(3), sqrt(2) };\nB := { x**2 + 1 : x in A };\nprint(\"B = \", B);\n\n// Como SETLX usou ponto flutuante, houve erro.\n// Vamos arredondar:\nprint( \"B = \", { round(x) : x in B } );\n\nB = {3.0000000000000004, 3.9999999999999996}\nB = {3, 4}\n\n\n\n\n\n\n\n\n\n\n\n\nResposta (c)\n\n\n\n\n\nEste item se parece com o item (a), mas há uma diferença importante: os valores de \\(x\\) — isto é, os elementos do conjunto — precisam pertencer a \\(\\{ 1, 2, 3, 4 \\}\\). Além disso, os valores de \\(x\\) precisam ser raízes do polinômio dado.\nNo item (a), vimos que as raízes são \\(-\\sqrt3, -\\sqrt2, \\sqrt2, \\text{ e } \\sqrt3\\). Nenhuma delas pertence ao conjunto \\(\\{ 1, 2, 3, 4 \\}\\).\nConclusão: o conjunto do item (c) é vazio.\nEm SETLX\n\nC := { x : x in {1, 2, 3, 4} | x**4 - 5*x**2 + 6 == 0 };\nprint(\"C = \", C);\n\nC = {}\n\n\nObserve que a notação de SETLX divide a especificação do conjunto em três partes:\n\nA forma geral do elemento: x;\nO domínio de onde vêm os valores da variável: x in {1, 2, 3, 4};\nA condição que deve ser satisfeita pelos elementos do conjunto: x**4 - 5*x**2 + 6 == 0.\n\nA notação do livro divide a especificação do conjunto em duas partes:\n\nA forma geral do elemento e o universo: \\(x \\in \\{1, 2, 3, 4\\}\\);\nA condição que deve ser satisfeita pelos elementos do conjunto: \\(x\\) é raiz do polinômio \\(x^4 - 5x^2 + 6\\).\n\nLembre-se disso para poder implementar corretamente em SETLX os exemplos do livro.\n\n\n\n\nExercício 2.2\nEscreva explicitamente os elementos dos seguintes conjuntos:\n\n\\(\\{ x \\in \\mathbb{Z}: x^2 - 2x + 1 \\leq 0 \\}\\)\n\\(\\{ x \\in \\mathbb{Z}: 2 \\leq x \\leq 20 \\text{ e } x \\text{ é primo} \\}\\)\n\\(\\{ x \\in \\mathbb{R}: x^2 - 2x = 0 \\}\\)\n\n\n\n\n\n\n\nResposta (a)\n\n\n\n\n\nUsando seus conhecimentos de Geometria Analítica, você pode traçar o gráfico da função \\(f : \\mathbb{R}\\to \\mathbb{R}\\) tal que\n\\[\nf(x) = x^2 - 2x + 1\n\\]\n\nO único valor de \\(x\\) para o qual \\(x^2 - 2x + 1 \\leq 0\\) é \\(1\\) (que também é a única raiz desta função).\nO conjunto deste item tem os inteiros (\\(\\mathbb{Z}\\)) como universo, e \\(1\\) é inteiro. Então, o conjunto é \\(\\{ 1 \\}\\).\n\n\n\n\n\n\n\n\n\nResposta (b)\n\n\n\n\n\nEste é o conjunto dos primos entre \\(2\\) e \\(20\\), inclusive:\n\\[\n\\{ 2, 3, 5, 7, 11, 13, 17, 19 \\}\n\\]\nEm SETLX\n\n// Função para testar se x é primo:\nprimo := procedure(x) {\n  \n  // Para cada inteiro i entre 2 e teto (ceiling) de √x:\n  for (i in {2..ceil(sqrt(x))}) {\n    \n    // Se o resto de x dividido por i for zero, x não é primo:\n    if (x % i == 0) {\n      return false;\n    }\n    \n  }\n  \n  // Se testou todos os valores de i sem dar resto zero, x é primo:\n  return true;\n  \n};\n\nB := { x : x in {2..20} | primo(x) };\nprint(\"B = \", B);\n\nB = {3, 5, 7, 11, 13, 17, 19}\n\n\nVocê verá, em outros exercícios, maneiras mais curtas para calcular os primos em um dado intervalo em SETLX. A função acima é a mais parecida com o que você vai aprender na sua disciplina de programação.\n\n\n\n\n\n\n\n\n\n\nResposta (c)\n\n\n\n\n\nBasta achar as soluções da equação:\n\\[\nx^2 - 2x = 0 \\iff x(x - 2) = 0 \\iff x = 0 \\text{ ou } x = 2\n\\]\nEntão, o conjunto é \\(\\{ 0, 2 \\}\\).\n\n\n\nExercício 2.3\nDetermine a cardinalidade dos seguintes conjuntos:\n\n\\(\\{ x \\in \\mathbb{Z}: -2 \\leq x \\leq 4 \\}\\)\n\\(\\{ x \\in \\mathbb{Z}: 10 \\leq x^2 \\leq 100 \\}\\)\n\\(\\{ x \\in \\mathbb{R}: x^4 - 5x^2 + 6 = 0 \\}\\)\n\\(\\{ \\sin(k\\pi/7) : k \\in \\mathbb{Z}\\}\\)\n\n\n\n\n\n\n\nResposta (a)\n\n\n\n\n\nEste é o conjunto \\(A = \\{ -2, -1, 0, 1, 2, 3, 4 \\}\\), que tem \\(7\\) elementos. Logo, \\(|A| = 7\\).\n\n\n\n\n\n\n\n\n\nResposta (b)\n\n\n\n\n\nEste é o conjunto dos inteiros cujo quadrado está entre \\(10\\) e \\(100\\), inclusive.\nPreste atenção: números negativos, quando elevados ao quadrado, resultam em números positivos.\nEste conjunto é\n\\[\nB = \\{ -10, -9, -8, -7, -6, -5, -4, 4, 5, 6, 7, 8, 9, 10 \\}\n\\]\ne \\(|B| = 14\\).\nEm SETLX\nE se os limites não fossem \\(10\\) e \\(100\\)?\nVamos fazer uma função mais geral, que recebe dois valores (minimo e maximo) e retorna o conjunto\n\\[\n\\left\\{\nx \\in \\mathbb{Z}:\nx \\in \\{ -\\sqrt{\\texttt{maximo}}, \\ldots, +\\sqrt{\\texttt{maximo}} \\}\n\\text{ e } \\texttt{minimo} \\leq x^2 \\leq \\texttt{maximo}\n\\right\\}\n\\]\nLeia com atenção a definição acima. Por que o domínio é \\(\\{ -\\sqrt{\\texttt{maximo}}, \\ldots, +\\sqrt{\\texttt{maximo}} \\}\\)?\n\ncalcular := procedure(minimo, maximo) {\n  \n  extremo_esquerdo := -floor(sqrt(maximo));\n  extremo_direito  :=  floor(sqrt(maximo));\n  \n  return { \n    x : \n      x in { extremo_esquerdo..extremo_direito } |\n        minimo &lt;= x**2 && x**2 &lt;= maximo\n  };\n  \n};\n\n// Vários conjuntos, com valores diferentes:\nprint(\"B  = \", calcular(10, 100));\nprint(\"B2 = \", calcular(5, 50));\nprint(\"B3 = \", calcular(0, 5));\nprint(\"B4 = \", calcular(0, 0));\n\n// B5 está correto?\nprint(\"B5 = \", calcular(10, 0));\n\nprint(\"\\n\");\n\n// Nossa função não é muito robusta. \n// Ela quebra se maximo for negativo. Por quê?\nprint(\"B6 = \", calcular(-20, -10));\n\nB  = {-10, -9, -8, -7, -6, -5, -4, 4, 5, 6, 7, 8, 9, 10}\nB2 = {-7, -6, -5, -4, -3, 3, 4, 5, 6, 7}\nB3 = {-2, -1, 0, 1, 2}\nB4 = {0}\nB5 = {}\n\n\nError in \"print(\"B6 = \", calcular(-20, -10))\":\nError in \"calcular(-20, -10)\":\nError in \"extremo_esquerdo := -floor(sqrt(maximo))\":\nError in \"-floor(sqrt(maximo))\":\nError in \"floor(sqrt(maximo))\":\nError in \"sqrt(maximo)\":\nResult of this operation is undefined/not a number.\n\nReplay: \n2.4: sqrt(maximo) FAILED \n2.3: maximo &lt;~&gt; -10\n2.2: sqrt &lt;~&gt; procedure(x) { /* predefined procedure `sqrt' */ }\n2.1: floor &lt;~&gt; procedure(numberValue) { /* predefined procedure `floor' */ }\n1.8: calcular(-20, -10) FAILED \n1.7: -10 &lt;~&gt; -10\n1.6: 10 &lt;~&gt; 10\n1.5: -20 &lt;~&gt; -20\n1.4: 20 &lt;~&gt; 20\n1.3: calcular &lt;~&gt; procedure(minimo, maximo) { extremo_esquerdo := -floor(sqrt(maximo)); extremo_direito := floor(sqrt(maximo)); return {x : x in {extremo_esquerdo .. extremo_direito} | minimo &lt;= x ** 2 && x ** 2 &lt;= maximo}; }\n1.2: \"B6 = \" &lt;~&gt; \"B6 = \"\n1.1: print &lt;~&gt; procedure(*value) { /* predefined procedure `print' */ }\n\n\n\n\n\n\n\n\n\n\n\n\nResposta (c)\n\n\n\n\n\nEste é o conjunto \\(A\\) do Exercício 2.1 (a), que tem \\(4\\) elementos. logo, \\(|A| = 4\\).",
    "crumbs": [
      "2 Teoria dos Conjuntos"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "Referências",
    "section": "",
    "text": "Anamaria Gomide, Jorge Stolfi. 2023. Elementos de Matemática\nDiscreta para Computação. https://www.ic.unicamp.br/~stolfi/fmc-book/2022-08-24-js/livro.pdf.",
    "crumbs": [
      "Referências"
    ]
  }
]